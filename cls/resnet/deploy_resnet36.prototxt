input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    kernel_size: 7
    stride: 2
    pad: 3
  }
}
layer {
  name: "conv1_bn"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv1_scale"
  bottom: "conv1"
  top: "conv1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_relu"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "res1_conv1_1x3"
  type: "Convolution"
  bottom: "pool1"
  top: "res1_conv1_1x3"
  convolution_param {
    num_output: 64
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res1_conv1_1x3_bn"
  type: "BatchNorm"
  bottom: "res1_conv1_1x3"
  top: "res1_conv1_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res1_conv1_1x3_scale"
  bottom: "res1_conv1_1x3"
  top: "res1_conv1_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res1_conv1_1x3_relu"
  type: "ReLU"
  bottom: "res1_conv1_1x3"
  top: "res1_conv1_1x3"
}
layer {
  name: "res1_conv1_3x1"
  type: "Convolution"
  bottom: "res1_conv1_1x3"
  top: "res1_conv1_3x1"
  convolution_param {
    num_output: 64
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res1_conv1_3x1_bn"
  type: "BatchNorm"
  bottom: "res1_conv1_3x1"
  top: "res1_conv1_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res1_conv1_3x1_scale"
  bottom: "res1_conv1_3x1"
  top: "res1_conv1_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res1_conv1_3x1_relu"
  type: "ReLU"
  bottom: "res1_conv1_3x1"
  top: "res1_conv1_3x1"
}
layer {
  name: "res1_conv2_1x3"
  type: "Convolution"
  bottom: "res1_conv1_3x1"
  top: "res1_conv2_1x3"
  convolution_param {
    num_output: 64
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res1_conv2_1x3_bn"
  type: "BatchNorm"
  bottom: "res1_conv2_1x3"
  top: "res1_conv2_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res1_conv2_1x3_scale"
  bottom: "res1_conv2_1x3"
  top: "res1_conv2_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res1_conv2_1x3_relu"
  type: "ReLU"
  bottom: "res1_conv2_1x3"
  top: "res1_conv2_1x3"
}
layer {
  name: "res1_conv2_3x1"
  type: "Convolution"
  bottom: "res1_conv2_1x3"
  top: "res1_conv2_3x1"
  convolution_param {
    num_output: 64
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res1_conv2_3x1_bn"
  type: "BatchNorm"
  bottom: "res1_conv2_3x1"
  top: "res1_conv2_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res1_conv2_3x1_scale"
  bottom: "res1_conv2_3x1"
  top: "res1_conv2_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res1_conv2_3x1_relu"
  type: "ReLU"
  bottom: "res1_conv2_3x1"
  top: "res1_conv2_3x1"
}
layer {
  name: "res1_elewise"
  type: "Eltwise"
  bottom: "res1_conv2_3x1"
  bottom: "pool1"
  top: "res1_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res1_elewise_relu"
  type: "ReLU"
  bottom: "res1_elewise"
  top: "res1_elewise"
}
layer {
  name: "res2_conv1_1x3"
  type: "Convolution"
  bottom: "res1_elewise"
  top: "res2_conv1_1x3"
  convolution_param {
    num_output: 64
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res2_conv1_1x3_bn"
  type: "BatchNorm"
  bottom: "res2_conv1_1x3"
  top: "res2_conv1_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res2_conv1_1x3_scale"
  bottom: "res2_conv1_1x3"
  top: "res2_conv1_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2_conv1_1x3_relu"
  type: "ReLU"
  bottom: "res2_conv1_1x3"
  top: "res2_conv1_1x3"
}
layer {
  name: "res2_conv1_3x1"
  type: "Convolution"
  bottom: "res2_conv1_1x3"
  top: "res2_conv1_3x1"
  convolution_param {
    num_output: 64
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res2_conv1_3x1_bn"
  type: "BatchNorm"
  bottom: "res2_conv1_3x1"
  top: "res2_conv1_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res2_conv1_3x1_scale"
  bottom: "res2_conv1_3x1"
  top: "res2_conv1_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2_conv1_3x1_relu"
  type: "ReLU"
  bottom: "res2_conv1_3x1"
  top: "res2_conv1_3x1"
}
layer {
  name: "res2_conv2_1x3"
  type: "Convolution"
  bottom: "res2_conv1_3x1"
  top: "res2_conv2_1x3"
  convolution_param {
    num_output: 64
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res2_conv2_1x3_bn"
  type: "BatchNorm"
  bottom: "res2_conv2_1x3"
  top: "res2_conv2_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res2_conv2_1x3_scale"
  bottom: "res2_conv2_1x3"
  top: "res2_conv2_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2_conv2_1x3_relu"
  type: "ReLU"
  bottom: "res2_conv2_1x3"
  top: "res2_conv2_1x3"
}
layer {
  name: "res2_conv2_3x1"
  type: "Convolution"
  bottom: "res2_conv2_1x3"
  top: "res2_conv2_3x1"
  convolution_param {
    num_output: 64
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res2_conv2_3x1_bn"
  type: "BatchNorm"
  bottom: "res2_conv2_3x1"
  top: "res2_conv2_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res2_conv2_3x1_scale"
  bottom: "res2_conv2_3x1"
  top: "res2_conv2_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2_conv2_3x1_relu"
  type: "ReLU"
  bottom: "res2_conv2_3x1"
  top: "res2_conv2_3x1"
}
layer {
  name: "res2_elewise"
  type: "Eltwise"
  bottom: "res2_conv2_3x1"
  bottom: "res1_elewise"
  top: "res2_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2_elewise_relu"
  type: "ReLU"
  bottom: "res2_elewise"
  top: "res2_elewise"
}
layer {
  name: "res3_conv1_1x3"
  type: "Convolution"
  bottom: "res2_elewise"
  top: "res3_conv1_1x3"
  convolution_param {
    num_output: 128
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride_h: 1
    stride_w: 2
  }
}
layer {
  name: "res3_conv1_1x3_bn"
  type: "BatchNorm"
  bottom: "res3_conv1_1x3"
  top: "res3_conv1_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res3_conv1_1x3_scale"
  bottom: "res3_conv1_1x3"
  top: "res3_conv1_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3_conv1_1x3_relu"
  type: "ReLU"
  bottom: "res3_conv1_1x3"
  top: "res3_conv1_1x3"
}
layer {
  name: "res3_conv1_3x1"
  type: "Convolution"
  bottom: "res3_conv1_1x3"
  top: "res3_conv1_3x1"
  convolution_param {
    num_output: 128
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride_h: 2
    stride_w: 1
  }
}
layer {
  name: "res3_conv1_3x1_bn"
  type: "BatchNorm"
  bottom: "res3_conv1_3x1"
  top: "res3_conv1_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res3_conv1_3x1_scale"
  bottom: "res3_conv1_3x1"
  top: "res3_conv1_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3_conv1_3x1_relu"
  type: "ReLU"
  bottom: "res3_conv1_3x1"
  top: "res3_conv1_3x1"
}
layer {
  name: "res3_conv2_1x3"
  type: "Convolution"
  bottom: "res3_conv1_3x1"
  top: "res3_conv2_1x3"
  convolution_param {
    num_output: 128
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res3_conv2_1x3_bn"
  type: "BatchNorm"
  bottom: "res3_conv2_1x3"
  top: "res3_conv2_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res3_conv2_1x3_scale"
  bottom: "res3_conv2_1x3"
  top: "res3_conv2_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3_conv2_1x3_relu"
  type: "ReLU"
  bottom: "res3_conv2_1x3"
  top: "res3_conv2_1x3"
}
layer {
  name: "res3_conv2_3x1"
  type: "Convolution"
  bottom: "res3_conv2_1x3"
  top: "res3_conv2_3x1"
  convolution_param {
    num_output: 128
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res3_conv2_3x1_bn"
  type: "BatchNorm"
  bottom: "res3_conv2_3x1"
  top: "res3_conv2_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res3_conv2_3x1_scale"
  bottom: "res3_conv2_3x1"
  top: "res3_conv2_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3_conv2_3x1_relu"
  type: "ReLU"
  bottom: "res3_conv2_3x1"
  top: "res3_conv2_3x1"
}
layer {
  name: "res3_match_conv"
  type: "Convolution"
  bottom: "res2_elewise"
  top: "res3_match_conv"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 2
    pad: 0
  }
}
layer {
  name: "res3_match_conv_bn"
  type: "BatchNorm"
  bottom: "res3_match_conv"
  top: "res3_match_conv"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res3_match_conv_scale"
  bottom: "res3_match_conv"
  top: "res3_match_conv"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3_elewise"
  type: "Eltwise"
  bottom: "res3_match_conv"
  bottom: "res3_conv2_3x1"
  top: "res3_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3_elewise_relu"
  type: "ReLU"
  bottom: "res3_elewise"
  top: "res3_elewise"
}
layer {
  name: "res4_conv1_1x3"
  type: "Convolution"
  bottom: "res3_elewise"
  top: "res4_conv1_1x3"
  convolution_param {
    num_output: 128
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res4_conv1_1x3_bn"
  type: "BatchNorm"
  bottom: "res4_conv1_1x3"
  top: "res4_conv1_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res4_conv1_1x3_scale"
  bottom: "res4_conv1_1x3"
  top: "res4_conv1_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4_conv1_1x3_relu"
  type: "ReLU"
  bottom: "res4_conv1_1x3"
  top: "res4_conv1_1x3"
}
layer {
  name: "res4_conv1_3x1"
  type: "Convolution"
  bottom: "res4_conv1_1x3"
  top: "res4_conv1_3x1"
  convolution_param {
    num_output: 128
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res4_conv1_3x1_bn"
  type: "BatchNorm"
  bottom: "res4_conv1_3x1"
  top: "res4_conv1_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res4_conv1_3x1_scale"
  bottom: "res4_conv1_3x1"
  top: "res4_conv1_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4_conv1_3x1_relu"
  type: "ReLU"
  bottom: "res4_conv1_3x1"
  top: "res4_conv1_3x1"
}
layer {
  name: "res4_conv2_1x3"
  type: "Convolution"
  bottom: "res4_conv1_3x1"
  top: "res4_conv2_1x3"
  convolution_param {
    num_output: 128
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res4_conv2_1x3_bn"
  type: "BatchNorm"
  bottom: "res4_conv2_1x3"
  top: "res4_conv2_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res4_conv2_1x3_scale"
  bottom: "res4_conv2_1x3"
  top: "res4_conv2_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4_conv2_1x3_relu"
  type: "ReLU"
  bottom: "res4_conv2_1x3"
  top: "res4_conv2_1x3"
}
layer {
  name: "res4_conv2_3x1"
  type: "Convolution"
  bottom: "res4_conv2_1x3"
  top: "res4_conv2_3x1"
  convolution_param {
    num_output: 128
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res4_conv2_3x1_bn"
  type: "BatchNorm"
  bottom: "res4_conv2_3x1"
  top: "res4_conv2_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res4_conv2_3x1_scale"
  bottom: "res4_conv2_3x1"
  top: "res4_conv2_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4_conv2_3x1_relu"
  type: "ReLU"
  bottom: "res4_conv2_3x1"
  top: "res4_conv2_3x1"
}
layer {
  name: "res4_elewise"
  type: "Eltwise"
  bottom: "res4_conv2_3x1"
  bottom: "res3_elewise"
  top: "res4_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4_elewise_relu"
  type: "ReLU"
  bottom: "res4_elewise"
  top: "res4_elewise"
}
layer {
  name: "res5_conv1_1x3"
  type: "Convolution"
  bottom: "res4_elewise"
  top: "res5_conv1_1x3"
  convolution_param {
    num_output: 256
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride_h: 1
    stride_w: 2
  }
}
layer {
  name: "res5_conv1_1x3_bn"
  type: "BatchNorm"
  bottom: "res5_conv1_1x3"
  top: "res5_conv1_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res5_conv1_1x3_scale"
  bottom: "res5_conv1_1x3"
  top: "res5_conv1_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5_conv1_1x3_relu"
  type: "ReLU"
  bottom: "res5_conv1_1x3"
  top: "res5_conv1_1x3"
}
layer {
  name: "res5_conv1_3x1"
  type: "Convolution"
  bottom: "res5_conv1_1x3"
  top: "res5_conv1_3x1"
  convolution_param {
    num_output: 256
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride_h: 2
    stride_w: 1
  }
}
layer {
  name: "res5_conv1_3x1_bn"
  type: "BatchNorm"
  bottom: "res5_conv1_3x1"
  top: "res5_conv1_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res5_conv1_3x1_scale"
  bottom: "res5_conv1_3x1"
  top: "res5_conv1_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5_conv1_3x1_relu"
  type: "ReLU"
  bottom: "res5_conv1_3x1"
  top: "res5_conv1_3x1"
}
layer {
  name: "res5_conv2_1x3"
  type: "Convolution"
  bottom: "res5_conv1_3x1"
  top: "res5_conv2_1x3"
  convolution_param {
    num_output: 256
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res5_conv2_1x3_bn"
  type: "BatchNorm"
  bottom: "res5_conv2_1x3"
  top: "res5_conv2_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res5_conv2_1x3_scale"
  bottom: "res5_conv2_1x3"
  top: "res5_conv2_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5_conv2_1x3_relu"
  type: "ReLU"
  bottom: "res5_conv2_1x3"
  top: "res5_conv2_1x3"
}
layer {
  name: "res5_conv2_3x1"
  type: "Convolution"
  bottom: "res5_conv2_1x3"
  top: "res5_conv2_3x1"
  convolution_param {
    num_output: 256
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res5_conv2_3x1_bn"
  type: "BatchNorm"
  bottom: "res5_conv2_3x1"
  top: "res5_conv2_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res5_conv2_3x1_scale"
  bottom: "res5_conv2_3x1"
  top: "res5_conv2_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5_conv2_3x1_relu"
  type: "ReLU"
  bottom: "res5_conv2_3x1"
  top: "res5_conv2_3x1"
}
layer {
  name: "res5_match_conv"
  type: "Convolution"
  bottom: "res4_elewise"
  top: "res5_match_conv"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 2
    pad: 0
  }
}
layer {
  name: "res5_match_conv_bn"
  type: "BatchNorm"
  bottom: "res5_match_conv"
  top: "res5_match_conv"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res5_match_conv_scale"
  bottom: "res5_match_conv"
  top: "res5_match_conv"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5_elewise"
  type: "Eltwise"
  bottom: "res5_conv2_3x1"
  bottom: "res5_match_conv"
  top: "res5_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5_elewise_relu"
  type: "ReLU"
  bottom: "res5_elewise"
  top: "res5_elewise"
}
layer {
  name: "res6_conv1_1x3"
  type: "Convolution"
  bottom: "res5_elewise"
  top: "res6_conv1_1x3"
  convolution_param {
    num_output: 256
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res6_conv1_1x3_bn"
  type: "BatchNorm"
  bottom: "res6_conv1_1x3"
  top: "res6_conv1_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res6_conv1_1x3_scale"
  bottom: "res6_conv1_1x3"
  top: "res6_conv1_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res6_conv1_1x3_relu"
  type: "ReLU"
  bottom: "res6_conv1_1x3"
  top: "res6_conv1_1x3"
}
layer {
  name: "res6_conv1_3x1"
  type: "Convolution"
  bottom: "res6_conv1_1x3"
  top: "res6_conv1_3x1"
  convolution_param {
    num_output: 256
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res6_conv1_3x1_bn"
  type: "BatchNorm"
  bottom: "res6_conv1_3x1"
  top: "res6_conv1_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res6_conv1_3x1_scale"
  bottom: "res6_conv1_3x1"
  top: "res6_conv1_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res6_conv1_3x1_relu"
  type: "ReLU"
  bottom: "res6_conv1_3x1"
  top: "res6_conv1_3x1"
}
layer {
  name: "res6_conv2_1x3"
  type: "Convolution"
  bottom: "res6_conv1_3x1"
  top: "res6_conv2_1x3"
  convolution_param {
    num_output: 256
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res6_conv2_1x3_bn"
  type: "BatchNorm"
  bottom: "res6_conv2_1x3"
  top: "res6_conv2_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res6_conv2_1x3_scale"
  bottom: "res6_conv2_1x3"
  top: "res6_conv2_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res6_conv2_1x3_relu"
  type: "ReLU"
  bottom: "res6_conv2_1x3"
  top: "res6_conv2_1x3"
}
layer {
  name: "res6_conv2_3x1"
  type: "Convolution"
  bottom: "res6_conv2_1x3"
  top: "res6_conv2_3x1"
  convolution_param {
    num_output: 256
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res6_conv2_3x1_bn"
  type: "BatchNorm"
  bottom: "res6_conv2_3x1"
  top: "res6_conv2_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res6_conv2_3x1_scale"
  bottom: "res6_conv2_3x1"
  top: "res6_conv2_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res6_conv2_3x1_relu"
  type: "ReLU"
  bottom: "res6_conv2_3x1"
  top: "res6_conv2_3x1"
}
layer {
  name: "res6_elewise"
  type: "Eltwise"
  bottom: "res6_conv2_3x1"
  bottom: "res5_elewise"
  top: "res6_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res6_elewise_relu"
  type: "ReLU"
  bottom: "res6_elewise"
  top: "res6_elewise"
}
layer {
  name: "res7_conv1_1x3"
  type: "Convolution"
  bottom: "res6_elewise"
  top: "res7_conv1_1x3"
  convolution_param {
    num_output: 512
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride_h: 1
    stride_w: 2
  }
}
layer {
  name: "res7_conv1_1x3_bn"
  type: "BatchNorm"
  bottom: "res7_conv1_1x3"
  top: "res7_conv1_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res7_conv1_1x3_scale"
  bottom: "res7_conv1_1x3"
  top: "res7_conv1_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res7_conv1_1x3_relu"
  type: "ReLU"
  bottom: "res7_conv1_1x3"
  top: "res7_conv1_1x3"
}
layer {
  name: "res7_conv1_3x1"
  type: "Convolution"
  bottom: "res7_conv1_1x3"
  top: "res7_conv1_3x1"
  convolution_param {
    num_output: 512
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride_h: 2
    stride_w: 1
  }
}
layer {
  name: "res7_conv1_3x1_bn"
  type: "BatchNorm"
  bottom: "res7_conv1_3x1"
  top: "res7_conv1_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res7_conv1_3x1_scale"
  bottom: "res7_conv1_3x1"
  top: "res7_conv1_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res7_conv1_3x1_relu"
  type: "ReLU"
  bottom: "res7_conv1_3x1"
  top: "res7_conv1_3x1"
}
layer {
  name: "res7_conv2_1x3"
  type: "Convolution"
  bottom: "res7_conv1_3x1"
  top: "res7_conv2_1x3"
  convolution_param {
    num_output: 512
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res7_conv2_1x3_bn"
  type: "BatchNorm"
  bottom: "res7_conv2_1x3"
  top: "res7_conv2_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res7_conv2_1x3_scale"
  bottom: "res7_conv2_1x3"
  top: "res7_conv2_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res7_conv2_1x3_relu"
  type: "ReLU"
  bottom: "res7_conv2_1x3"
  top: "res7_conv2_1x3"
}
layer {
  name: "res7_conv2_3x1"
  type: "Convolution"
  bottom: "res7_conv2_1x3"
  top: "res7_conv2_3x1"
  convolution_param {
    num_output: 512
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res7_conv2_3x1_bn"
  type: "BatchNorm"
  bottom: "res7_conv2_3x1"
  top: "res7_conv2_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res7_conv2_3x1_scale"
  bottom: "res7_conv2_3x1"
  top: "res7_conv2_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res7_conv2_3x1_relu"
  type: "ReLU"
  bottom: "res7_conv2_3x1"
  top: "res7_conv2_3x1"
}
layer {
  name: "res7_match_conv"
  type: "Convolution"
  bottom: "res6_elewise"
  top: "res7_match_conv"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 2
    pad: 0
  }
}
layer {
  name: "res7_match_conv_bn"
  type: "BatchNorm"
  bottom: "res7_match_conv"
  top: "res7_match_conv"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res7_match_conv_scale"
  bottom: "res7_match_conv"
  top: "res7_match_conv"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res7_elewise"
  type: "Eltwise"
  bottom: "res7_match_conv"
  bottom: "res7_conv2_3x1"
  top: "res7_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res7_elewise_relu"
  type: "ReLU"
  bottom: "res7_elewise"
  top: "res7_elewise"
}
layer {
  name: "res8_conv1_1x3"
  type: "Convolution"
  bottom: "res7_elewise"
  top: "res8_conv1_1x3"
  convolution_param {
    num_output: 512
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res8_conv1_1x3_bn"
  type: "BatchNorm"
  bottom: "res8_conv1_1x3"
  top: "res8_conv1_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res8_conv1_1x3_scale"
  bottom: "res8_conv1_1x3"
  top: "res8_conv1_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res8_conv1_1x3_relu"
  type: "ReLU"
  bottom: "res8_conv1_1x3"
  top: "res8_conv1_1x3"
}
layer {
  name: "res8_conv1_3x1"
  type: "Convolution"
  bottom: "res8_conv1_1x3"
  top: "res8_conv1_3x1"
  convolution_param {
    num_output: 512
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res8_conv1_3x1_bn"
  type: "BatchNorm"
  bottom: "res8_conv1_3x1"
  top: "res8_conv1_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res8_conv1_3x1_scale"
  bottom: "res8_conv1_3x1"
  top: "res8_conv1_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res8_conv1_3x1_relu"
  type: "ReLU"
  bottom: "res8_conv1_3x1"
  top: "res8_conv1_3x1"
}
layer {
  name: "res8_conv2_1x3"
  type: "Convolution"
  bottom: "res8_conv1_3x1"
  top: "res8_conv2_1x3"
  convolution_param {
    num_output: 512
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
  }
}
layer {
  name: "res8_conv2_1x3_bn"
  type: "BatchNorm"
  bottom: "res8_conv2_1x3"
  top: "res8_conv2_1x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res8_conv2_1x3_scale"
  bottom: "res8_conv2_1x3"
  top: "res8_conv2_1x3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res8_conv2_1x3_relu"
  type: "ReLU"
  bottom: "res8_conv2_1x3"
  top: "res8_conv2_1x3"
}
layer {
  name: "res8_conv2_3x1"
  type: "Convolution"
  bottom: "res8_conv2_1x3"
  top: "res8_conv2_3x1"
  convolution_param {
    num_output: 512
    pad_h: 1
    pad_w: 0
    kernel_h: 3
    kernel_w: 1
    stride: 1
  }
}
layer {
  name: "res8_conv2_3x1_bn"
  type: "BatchNorm"
  bottom: "res8_conv2_3x1"
  top: "res8_conv2_3x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "res8_conv2_3x1_scale"
  bottom: "res8_conv2_3x1"
  top: "res8_conv2_3x1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res8_conv2_3x1_relu"
  type: "ReLU"
  bottom: "res8_conv2_3x1"
  top: "res8_conv2_3x1"
}
layer {
  name: "res8_elewise"
  type: "Eltwise"
  bottom: "res8_conv2_3x1"
  bottom: "res7_elewise"
  top: "res8_elewise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res8_elewise_relu"
  type: "ReLU"
  bottom: "res8_elewise"
  top: "res8_elewise"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "res8_elewise"
  top: "conv2"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    stride: 1
    pad: 0
  }
}
layer {
  name: "conv2_bn"
  type: "BatchNorm"
  bottom: "conv2"
  top: "conv2"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_scale"
  bottom: "conv2"
  top: "conv2"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_relu"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool_ave"
  type: "Pooling"
  bottom: "conv2"
  top: "pool_ave"
  pooling_param {
    global_pooling : true
    pool: AVE
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool_ave"
  top: "conv3"
  convolution_param {
    num_output: 4096
    kernel_size: 1
    stride: 1
    pad: 0
  }
}
layer {
  name: "conv3_bn"
  type: "BatchNorm"
  bottom: "conv3"
  top: "conv3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_scale"
  bottom: "conv3"
  top: "conv3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_relu"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv3_dropout"
  type: "Dropout"
  bottom: "conv3"
  top: "conv3"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 1000
    kernel_size: 1
    stride: 1
    pad: 0
  }
}
layer {
  name: "conv4_bn"
  type: "BatchNorm"
  bottom: "conv4"
  top: "conv4"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_scale"
  bottom: "conv4"
  top: "conv4"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_relu"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  bottom: "conv4"
  top: "classifier"
  name: "classifier"
  type: "Reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "classifier"
  top: "prob"
}
